{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Weights and Biasify FinRL for Stable Baselines3 models","provenance":[{"file_id":"https://github.com/AI4Finance-Foundation/FinRL/blob/master/FinRL_Weights_and_Biasify_FinRL_for_Stable_Baselines3_models.ipynb","timestamp":1637678344602}],"collapsed_sections":[],"machine_shape":"hm"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"},"widgets":{"application/vnd.jupyter.widget-state+json":{"09af8af4e6904e3abf7dfc593269f23c":{"model_module":"@jupyter-widgets/controls","model_name":"VBoxModel","model_module_version":"1.5.0","state":{"_view_name":"VBoxView","_dom_classes":[],"_model_name":"VBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_41b5cda01bd444b884a33f38292a656a","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_3bf727116ba94a159af5bd870a854f8b","IPY_MODEL_520445fe85ae4e1f87f4bc98d9a83236"]}},"41b5cda01bd444b884a33f38292a656a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"3bf727116ba94a159af5bd870a854f8b":{"model_module":"@jupyter-widgets/controls","model_name":"LabelModel","model_module_version":"1.5.0","state":{"_view_name":"LabelView","style":"IPY_MODEL_805c6569231e4db6bc9a0fa6f93af223","_dom_classes":[],"description":"","_model_name":"LabelModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 0.11MB of 0.11MB uploaded (0.00MB deduped)\r","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_67ad63a0501c41abaf4219767ee0ff62"}},"520445fe85ae4e1f87f4bc98d9a83236":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_view_name":"ProgressView","style":"IPY_MODEL_4ca7d4548f3b40f792713a80db7087fe","_dom_classes":[],"description":"","_model_name":"FloatProgressModel","bar_style":"","max":1,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":1,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_899f2aa4f0bb4e7db870dffba54ce54f"}},"805c6569231e4db6bc9a0fa6f93af223":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"67ad63a0501c41abaf4219767ee0ff62":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"4ca7d4548f3b40f792713a80db7087fe":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"899f2aa4f0bb4e7db870dffba54ce54f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"48983c2fdf744a3d985875a552063a9b":{"model_module":"@jupyter-widgets/controls","model_name":"VBoxModel","model_module_version":"1.5.0","state":{"_view_name":"VBoxView","_dom_classes":[],"_model_name":"VBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_b7c6ddebbe8d41f5859d784ec6c808de","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_c533d4dcd7bd47729709565bb588096a","IPY_MODEL_cd6f01a75e6c4283acbe22bee5e92a66"]}},"b7c6ddebbe8d41f5859d784ec6c808de":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"c533d4dcd7bd47729709565bb588096a":{"model_module":"@jupyter-widgets/controls","model_name":"LabelModel","model_module_version":"1.5.0","state":{"_view_name":"LabelView","style":"IPY_MODEL_57c609b60c9f4248bc4eaa48c10cebf2","_dom_classes":[],"description":"","_model_name":"LabelModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 0.12MB of 0.12MB uploaded (0.00MB deduped)\r","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_603f625f11944d68b3b1cfdaf3345119"}},"cd6f01a75e6c4283acbe22bee5e92a66":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_view_name":"ProgressView","style":"IPY_MODEL_f08e34ca0f1f4a30b10a6606344ddc59","_dom_classes":[],"description":"","_model_name":"FloatProgressModel","bar_style":"","max":1,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":1,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_9b218b9768e34a5ab47a9768c2e2cf0b"}},"57c609b60c9f4248bc4eaa48c10cebf2":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"603f625f11944d68b3b1cfdaf3345119":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"f08e34ca0f1f4a30b10a6606344ddc59":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"9b218b9768e34a5ab47a9768c2e2cf0b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"90446ece41c6489fb84f380eb4cce806":{"model_module":"@jupyter-widgets/controls","model_name":"VBoxModel","model_module_version":"1.5.0","state":{"_view_name":"VBoxView","_dom_classes":[],"_model_name":"VBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_d4ea47342cbc4beda1a0e8aaeb1acfaa","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_7b19ee3cd93247cfbf599807ba564ce6","IPY_MODEL_1e3a40ee32b447d7aff390c137da1309"]}},"d4ea47342cbc4beda1a0e8aaeb1acfaa":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"7b19ee3cd93247cfbf599807ba564ce6":{"model_module":"@jupyter-widgets/controls","model_name":"LabelModel","model_module_version":"1.5.0","state":{"_view_name":"LabelView","style":"IPY_MODEL_1cdb668c63a542fb8fdccf0e5e1cb365","_dom_classes":[],"description":"","_model_name":"LabelModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 0.13MB of 0.13MB uploaded (0.00MB deduped)\r","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_eb4cd6e4e1aa4ac58542940f0ed7c083"}},"1e3a40ee32b447d7aff390c137da1309":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_view_name":"ProgressView","style":"IPY_MODEL_9bfc6cf06e194997a5a9e8df234f153d","_dom_classes":[],"description":"","_model_name":"FloatProgressModel","bar_style":"","max":1,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":1,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_46516d3d2a264cbfa6b3452109ed5a3e"}},"1cdb668c63a542fb8fdccf0e5e1cb365":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"eb4cd6e4e1aa4ac58542940f0ed7c083":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"9bfc6cf06e194997a5a9e8df234f153d":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"46516d3d2a264cbfa6b3452109ed5a3e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}}}},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"k7tNSkCdnxu-"},"source":["%%capture\n","!pip install git+https://github.com/Soumadip-Saha/FinRL.git\n","!pip install wandb\n","#!pip install git+https://github.com/quantopian/pyfolio.git\n","#!pip install zipline"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"8l_5ypFddser"},"source":["# %%capture\n","# !pip install torch==1.4.0"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"UL_DUpELpVyK"},"source":["import pandas as pd\n","import numpy as np\n","import matplotlib\n","import matplotlib.pyplot as plt\n","# matplotlib.use('Agg')\n","import datetime\n","\n","%matplotlib inline\n","from finrl.apps import config\n","from finrl.neo_finrl.preprocessor.yahoodownloader import YahooDownloader\n","from finrl.neo_finrl.preprocessor.preprocessors import FeatureEngineer, data_split\n","from finrl.neo_finrl.env_stock_trading.env_stocktrading import StockTradingEnv\n","from finrl.neo_finrl.env_stock_trading.env_stocktrading_np import StockTradingEnv as StockTradingEnv_numpy \n","# from finrl.drl_agents.stablebaselines3.models import DRLAgent as DRLAgent_sb3\n","from finrl.neo_finrl.data_processor import DataProcessor\n","\n","from finrl.plot import backtest_stats, backtest_plot, get_daily_return, get_baseline\n","import ray\n","from pprint import pprint\n","import pprint\n","import sys\n","sys.path.append(\"../FinRL-Library\")\n","\n","import itertools"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"E-WdUod78OtH"},"source":["import wandb\n","from wandb.integration.sb3 import WandbCallback"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":69},"id":"uhLdgzQ7ry-Z","executionInfo":{"status":"ok","timestamp":1638357089988,"user_tz":-330,"elapsed":6493,"user":{"displayName":"SOUMADIP SAHA","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgBIhQzXFxUD67JZCokaCrA-s-f6-efd3fIlbej6A=s64","userId":"03639918028251710231"}},"outputId":"e8a3f7bd-1fe9-4e10-837a-319e2aeeafa8"},"source":["wandb.login()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"application/javascript":["\n","        window._wandbApiKey = new Promise((resolve, reject) => {\n","            function loadScript(url) {\n","            return new Promise(function(resolve, reject) {\n","                let newScript = document.createElement(\"script\");\n","                newScript.onerror = reject;\n","                newScript.onload = resolve;\n","                document.body.appendChild(newScript);\n","                newScript.src = url;\n","            });\n","            }\n","            loadScript(\"https://cdn.jsdelivr.net/npm/postmate/build/postmate.min.js\").then(() => {\n","            const iframe = document.createElement('iframe')\n","            iframe.style.cssText = \"width:0;height:0;border:none\"\n","            document.body.appendChild(iframe)\n","            const handshake = new Postmate({\n","                container: iframe,\n","                url: 'https://wandb.ai/authorize'\n","            });\n","            const timeout = setTimeout(() => reject(\"Couldn't auto authenticate\"), 5000)\n","            handshake.then(function(child) {\n","                child.on('authorize', data => {\n","                    clearTimeout(timeout)\n","                    resolve(data)\n","                });\n","            });\n","            })\n","        });\n","    "],"text/plain":["<IPython.core.display.Javascript object>"]},"metadata":{}},{"output_type":"stream","name":"stderr","text":["\u001b[34m\u001b[1mwandb\u001b[0m: Appending key for api.wandb.ai to your netrc file: /root/.netrc\n"]},{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","metadata":{"id":"kcuU0wz6ppVF"},"source":["import os\n","if not os.path.exists(\"./\" + config.DATA_SAVE_DIR):\n","    os.makedirs(\"./\" + config.DATA_SAVE_DIR)\n","if not os.path.exists(\"./\" + config.TRAINED_MODEL_DIR):\n","    os.makedirs(\"./\" + config.TRAINED_MODEL_DIR)\n","if not os.path.exists(\"./\" + config.TENSORBOARD_LOG_DIR):\n","    os.makedirs(\"./\" + config.TENSORBOARD_LOG_DIR)\n","if not os.path.exists(\"./\" + config.RESULTS_DIR):\n","    os.makedirs(\"./\" + config.RESULTS_DIR)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"csBR7bjGm9CY"},"source":["def model_params(model_name):\n","  sweep_config = {\n","      'method': 'bayes'\n","          }\n","\n","  metric = {\n","      'name': 'Val sharpe',\n","      'goal': 'maximize'\n","  }\n","\n","  sweep_config['metric'] = metric\n","\n","  ddpg_param_dict = {\n","    \"buffer_size\": {\n","        \"values\":[int(1e5), int(500000), int(1e6)]\n","        },     \n","    \"learning_rate\": {   \n","        \"distribution\": \"uniform\",\n","        \"min\": 1e-5,\n","        \"max\": 1,\n","    },\n","    \"batch_size\" :{\n","        'values':[32, 64, 128, 256, 512]\n","    },\n","    \"total_timesteps\": {\n","            'values':[ 10000, 15000, 25000, 50000]},\n","  }\n","\n","  a2c_param_dict = {\n","      \"n_steps\": {\n","          'values': [5, 10, 15, 35, 100]},\n","      \"ent_coef\": {   \n","        \"distribution\": \"uniform\",\n","        \"min\": 1e-8,\n","        \"max\": 1,\n","    },\n","      \"learning_rate\": {   \n","        \"distribution\": \"uniform\",\n","        \"min\": 1e-5,\n","        \"max\": 1,\n","    },\n","    \"total_timesteps\": {\n","            'values':[ 10000, 15000, 25000, 50000]},\n","  }\n","\n","  ppo_param_dict = {\n","      \"ent_coef\": {   \n","        \"distribution\": \"uniform\",\n","        \"min\": 1e-8,\n","        \"max\": 1,\n","    },\n","        \"n_steps\": {\n","            'values':[128, 256, 512, 1024, 2048]},\n","        \"learning_rate\": {   \n","        \"distribution\": \"uniform\",\n","        \"min\": 1e-2,\n","        \"max\": 1,\n","    },\n","        \"batch_size\": {\n","        'values':[32, 64, 128, 256, 512]},\n","        \"total_timesteps\": {\n","            'values':[ 10000, 15000, 25000, 50000]},\n","  }\n","\n","  stopping_criteria = {'type': 'hyperband', 's': 2, 'eta': 2, 'max_iter': 12}\n","\n","  sweep_config['early_terminate'] = stopping_criteria\n","\n","  if model_name == 'ddpg':\n","    sweep_config['parameters'] = ddpg_param_dict\n","  elif model_name == 'ppo':\n","    sweep_config['parameters'] = ppo_param_dict\n","  elif model_name == 'a2c':\n","    sweep_config['parameters'] = a2c_param_dict\n","\n","  return sweep_config"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gdiVZzPG7v2y","executionInfo":{"status":"ok","timestamp":1638357191866,"user_tz":-330,"elapsed":21,"user":{"displayName":"SOUMADIP SAHA","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgBIhQzXFxUD67JZCokaCrA-s-f6-efd3fIlbej6A=s64","userId":"03639918028251710231"}},"outputId":"8f5bb577-3ac5-438b-a5c6-0b26b263ce41"},"source":["%%writefile model_wandb.py\n","import wandb\n","from wandb.integration.sb3 import WandbCallback\n","import time\n","\n","import numpy as np\n","import pandas as pd\n","from finrl.apps import config\n","# from finrl.neo_finrl.env_stock_trading.env_stocktrading import StockTradingEnv\n","from finrl.neo_finrl.preprocessor.preprocessors import data_split\n","from stable_baselines3 import A2C, DDPG, PPO, SAC, TD3\n","from stable_baselines3.common.callbacks import BaseCallback\n","from stable_baselines3.common.noise import (\n","    NormalActionNoise,\n","    OrnsteinUhlenbeckActionNoise,\n",")\n","from stable_baselines3.common.vec_env import DummyVecEnv\n","import pprint\n","MODELS = {\"a2c\": A2C, \"ddpg\": DDPG, \"td3\": TD3, \"sac\": SAC, \"ppo\": PPO}\n","\n","MODEL_KWARGS = {x: config.__dict__[f\"{x.upper()}_PARAMS\"] for x in MODELS.keys()}\n","\n","NOISE = {\n","    \"normal\": NormalActionNoise,\n","    \"ornstein_uhlenbeck\": OrnsteinUhlenbeckActionNoise,\n","}\n"," \n","class DRLAgent_SB3:\n","  def __init__(self,env,run):\n","    self.env = env\n","    # self.run = wandb.init(reinit=True,\n","    #       project = 'finrl-sweeps-sb3',\n","    #       sync_tensorboard = True,\n","    #       save_code = True\n","    #   )\n","    self.run = run\n","  def get_model(\n","      self,\n","      model_name,\n","      policy_kwargs=None,\n","      model_kwargs=None,\n","      verbose=1,\n","      seed=None,\n","  ):\n","      if model_name not in MODELS:\n","          raise NotImplementedError(\"NotImplementedError\")\n","\n","      if model_kwargs is None:\n","          model_kwargs = MODEL_KWARGS[model_name]\n","\n","      if \"action_noise\" in model_kwargs:\n","          n_actions = self.env.action_space.shape[-1]\n","          model_kwargs[\"action_noise\"] = NOISE[model_kwargs[\"action_noise\"]](\n","              mean=np.zeros(n_actions), sigma=0.1 * np.ones(n_actions)\n","          )\n","      print(model_kwargs)\n","\n","      model = MODELS[model_name](\n","          policy='MlpPolicy',\n","          env=self.env,\n","          tensorboard_log=f\"runs/{self.run.id}\",\n","          verbose=verbose,\n","          policy_kwargs=policy_kwargs,\n","          seed=seed,\n","          **model_kwargs,\n","      )\n","      return model\n","  \n","  def train_model(self, model,total_timesteps):\n","    model = model.learn(\n","        total_timesteps=total_timesteps,\n","        callback = WandbCallback(\n","            gradient_save_freq = 100, model_save_path = f\"models/{self.run.id}\",\n","            verbose = 2\n","        ),\n","    )\n","    \n","    return model\n","  @staticmethod\n","  def DRL_prediction_load_from_file(run , model_name, environment,val_or_test='val'):\n","      if model_name not in MODELS:\n","          raise NotImplementedError(\"NotImplementedError, Pass correct model name\")\n","      try:\n","          # load agent\n","          model = MODELS[model_name].load(f\"models/{run.id}/model.zip\") #print_system_info=True\n","          print(\"Successfully load model\", f\"models/{run.id}\")\n","      except BaseException:\n","          raise ValueError(\"Fail to load agent!\")\n","\n","      # test on the testing env\n","      state = environment.reset()\n","      episode_returns = list()  # the cumulative_return / initial_account\n","      episode_total_assets = list()\n","      episode_total_assets.append(environment.initial_total_asset)\n","      done = False\n","      while not done:\n","          action, _state = model.predict(state)[0]\n","          print(\"This is Printed State:\",_state)\n","          state, reward, done, _ = environment.step(action)\n","\n","          total_asset = (\n","              environment.amount\n","              + (environment.price_ary[environment.day] * environment.stocks).sum()\n","          )\n","          episode_total_assets.append(total_asset)\n","          episode_return = total_asset / environment.initial_total_asset\n","          episode_returns.append(episode_return)\n","    \n","      def calculate_sharpe(df):\n","        df['daily_return'] = df['account_value'].pct_change(1)\n","        if df['daily_return'].std() !=0:\n","          sharpe = (252**0.5)*df['daily_return'].mean()/ \\\n","              df['daily_return'].std()\n","          return sharpe\n","        else:\n","          return 0\n","\n","      print(\"episode_return\", episode_return)\n","      print(\"Test Finished!\")\n","      sharpe_df = pd.DataFrame(episode_total_assets,columns=['account_value'])\n","      sharpe = calculate_sharpe(sharpe_df)\n","      if val_or_test == \"val\":\n","        wandb.log({\"Val sharpe\":sharpe})\n","      elif val_or_test == \"test\":\n","        wandb.log({\"Test sharpe\":sharpe})\n","        print(f'Test Sharpe for {run.id} is {sharpe}')\n","      # run.finish()\n","      return sharpe, episode_total_assets"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Writing model_wandb.py\n"]}]},{"cell_type":"code","metadata":{"id":"dZwuaatxW1oJ"},"source":["from model_wandb import DRLAgent_SB3"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"5m0ZdifPpqVX"},"source":["def df_to_array(df, tech_indicator_list, if_vix=False):\n","  \"\"\"transform final df to numpy arrays\"\"\"\n","  unique_ticker = df.tic.unique()\n","  print(unique_ticker)\n","  if_first_time = True\n","  for tic in unique_ticker:\n","    if if_first_time:\n","      price_array = df[df.tic == tic][[\"close\"]].values\n","      # price_ary = df[df.tic==tic]['close'].values\n","      tech_array = df[df.tic == tic][tech_indicator_list].values\n","      if if_vix:\n","        turbulence_array = df[df.tic == tic][\"vix\"].values\n","      else:\n","        turbulence_array = df[df.tic == tic][\"turbulence\"].values\n","        if_first_time = False\n","    else:\n","      price_array = np.hstack([price_array, df[df.tic == tic][[\"adjcp\"]].values])\n","      tech_array = np.hstack([tech_array, df[df.tic == tic][tech_indicator_list].values])\n","    assert price_array.shape[0] == tech_array.shape[0]\n","    assert tech_array.shape[0] == turbulence_array.shape[0]\n","    print(\"Successfully transformed into array\")\n","    return price_array, tech_array, turbulence_array\n","\n","\n","def train_agent_env(data, start_date, end_date, ticker_list, \n","          technical_indicator_list, env, model_name, if_vix = False,\n","          **kwargs):\n","    \n","    #fetch data\n","    \"\"\"\n","    DP = DataProcessor(data_source, **kwargs)\n","    data = DP.download_data(ticker_list, start_date, end_date, time_interval)\n","    data = DP.clean_data(data)\n","    print(\"After cleaning, data: \",data.columns.values.tolist())\n","    data = DP.add_technical_indicator(data, technical_indicator_list)\n","    print(\"After adding technical-indicator, data: \",data.columns.values.tolist())\n","    if if_vix:\n","        data = DP.add_vix(data)\n","    else:\n","        data = DP.add_turbulence(data)\n","        print(\"After adding turbulence-index data: \",data.head())\n","    # data.to_csv('train_data.csv')\n","    # data = pd.read_csv('train_data.csv')\n","    \"\"\"\n","    #print(\"Line 2\\n\",data.head())\n","    #print(\"Line 3\")\n","    df = data.loc[(data['date'] >= start_date) & (data['date'] <= end_date)]\n","    #print(\"Line 4\")\n","    price_array, tech_array, turbulence_array = df_to_array(df, technical_indicator_list, if_vix)\n","    #print(\"Line 5\")\n","    env_config = {'price_array':price_array,\n","              'tech_array':tech_array,\n","              'turbulence_array':turbulence_array,\n","              'if_train':True}\n","    #print(\"Line 6\")\n","    env_instance = env(config=env_config)\n","\n","    return env_instance\n","\n","def train(config=None):\n","    with wandb.init(config=config, sync_tensorboard = True, save_code = True) as run:\n","      #Get the training environment\n","      #print(\"Line 1\\n\",df.head())\n","      train_env_instance = train_agent_env(df, TRAIN_START_DATE, TRAIN_END_DATE, ticker_list,\n","                            technical_indicator_list, env, model_name)\n","      #print(\"Line 3\")\n","      config = wandb.config\n","      #Initialize the training agent\n","      agent_train = DRLAgent_SB3(train_env_instance,run)\n","      #For current set of hyperparameters initialize the model\n","      model = agent_train.get_model(model_name, model_kwargs = config)\n","      #train the model\n","      trained_model = agent_train.train_model(model,total_timesteps)\n","      run_ids[run.id] = run\n","      print('Training finished!')\n","      #Log the validation sharpe\n","      sharpe,val_episode_total_asset = val_or_test(df, VAL_START_DATE, VAL_END_DATE,run, ticker_list, \n","          technical_indicator_list, env, model_name)\n","      #Log the testing sharpe\n","      sharpe,val_episode_total_asset = val_or_test(df,\n","          TEST_START_DATE, TEST_END_DATE,run,ticker_list, \n","          technical_indicator_list, env, model_name,val_or_test = 'test')\n","     "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"kIFpQvW44LxI"},"source":["\n","def val_or_test(data, start_date, end_date, run, ticker_list, \n","         technical_indicator_list, env, model_name, val_or_test='val', if_vix = False,\n","         **kwargs):\n","  data = data.loc[(data['date'] >= start_date) & (data['date'] <= end_date)]\n","  \n","  if if_vix:\n","      data = DP.add_vix(data)\n","  # if val_or_test == 'val':\n","  #   data.to_csv('val.csv')\n","  # elif val_or_test == 'test':\n","  #   data.to_csv('test.csv')\n","  # if val_or_test == 'val':\n","  #   data=pd.read_csv('val.csv')\n","  # elif val_or_test == 'test':\n","  #   data = pd.read_csv('test.csv')\n","  price_array, tech_array, turbulence_array = df_to_array(data,  technical_indicator_list, if_vix)\n","    \n","  test_env_config = {'price_array':price_array,\n","          'tech_array':tech_array,\n","          'turbulence_array':turbulence_array,\n","          'if_train':False}\n","  env_instance = env(config=test_env_config)\n","  \n","  run_ids[run.id] = run\n","  sharpe,episode_total_assets = DRLAgent_SB3.DRL_prediction_load_from_file(run,model_name,env_instance,val_or_test)\n","  \n","  return sharpe, episode_total_assets"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"resources":{"http://localhost:8080/nbextensions/google.colab/files.js":{"data":"Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7CgpmdW5jdGlvbiBfdXBsb2FkRmlsZXMoaW5wdXRJZCwgb3V0cHV0SWQpIHsKICBjb25zdCBzdGVwcyA9IHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCk7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICAvLyBDYWNoZSBzdGVwcyBvbiB0aGUgb3V0cHV0RWxlbWVudCB0byBtYWtlIGl0IGF2YWlsYWJsZSBmb3IgdGhlIG5leHQgY2FsbAogIC8vIHRvIHVwbG9hZEZpbGVzQ29udGludWUgZnJvbSBQeXRob24uCiAgb3V0cHV0RWxlbWVudC5zdGVwcyA9IHN0ZXBzOwoKICByZXR1cm4gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpOwp9CgovLyBUaGlzIGlzIHJvdWdobHkgYW4gYXN5bmMgZ2VuZXJhdG9yIChub3Qgc3VwcG9ydGVkIGluIHRoZSBicm93c2VyIHlldCksCi8vIHdoZXJlIHRoZXJlIGFyZSBtdWx0aXBsZSBhc3luY2hyb25vdXMgc3RlcHMgYW5kIHRoZSBQeXRob24gc2lkZSBpcyBnb2luZwovLyB0byBwb2xsIGZvciBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcC4KLy8gVGhpcyB1c2VzIGEgUHJvbWlzZSB0byBibG9jayB0aGUgcHl0aG9uIHNpZGUgb24gY29tcGxldGlvbiBvZiBlYWNoIHN0ZXAsCi8vIHRoZW4gcGFzc2VzIHRoZSByZXN1bHQgb2YgdGhlIHByZXZpb3VzIHN0ZXAgYXMgdGhlIGlucHV0IHRvIHRoZSBuZXh0IHN0ZXAuCmZ1bmN0aW9uIF91cGxvYWRGaWxlc0NvbnRpbnVlKG91dHB1dElkKSB7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICBjb25zdCBzdGVwcyA9IG91dHB1dEVsZW1lbnQuc3RlcHM7CgogIGNvbnN0IG5leHQgPSBzdGVwcy5uZXh0KG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSk7CiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXh0LnZhbHVlLnByb21pc2UpLnRoZW4oKHZhbHVlKSA9PiB7CiAgICAvLyBDYWNoZSB0aGUgbGFzdCBwcm9taXNlIHZhbHVlIHRvIG1ha2UgaXQgYXZhaWxhYmxlIHRvIHRoZSBuZXh0CiAgICAvLyBzdGVwIG9mIHRoZSBnZW5lcmF0b3IuCiAgICBvdXRwdXRFbGVtZW50Lmxhc3RQcm9taXNlVmFsdWUgPSB2YWx1ZTsKICAgIHJldHVybiBuZXh0LnZhbHVlLnJlc3BvbnNlOwogIH0pOwp9CgovKioKICogR2VuZXJhdG9yIGZ1bmN0aW9uIHdoaWNoIGlzIGNhbGxlZCBiZXR3ZWVuIGVhY2ggYXN5bmMgc3RlcCBvZiB0aGUgdXBsb2FkCiAqIHByb2Nlc3MuCiAqIEBwYXJhbSB7c3RyaW5nfSBpbnB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIGlucHV0IGZpbGUgcGlja2VyIGVsZW1lbnQuCiAqIEBwYXJhbSB7c3RyaW5nfSBvdXRwdXRJZCBFbGVtZW50IElEIG9mIHRoZSBvdXRwdXQgZGlzcGxheS4KICogQHJldHVybiB7IUl0ZXJhYmxlPCFPYmplY3Q+fSBJdGVyYWJsZSBvZiBuZXh0IHN0ZXBzLgogKi8KZnVuY3Rpb24qIHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IGlucHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlucHV0SWQpOwogIGlucHV0RWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlOwoKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIG91dHB1dEVsZW1lbnQuaW5uZXJIVE1MID0gJyc7CgogIGNvbnN0IHBpY2tlZFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7CiAgICAgIHJlc29sdmUoZS50YXJnZXQuZmlsZXMpOwogICAgfSk7CiAgfSk7CgogIGNvbnN0IGNhbmNlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwogIGlucHV0RWxlbWVudC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKGNhbmNlbCk7CiAgY2FuY2VsLnRleHRDb250ZW50ID0gJ0NhbmNlbCB1cGxvYWQnOwogIGNvbnN0IGNhbmNlbFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgY2FuY2VsLm9uY2xpY2sgPSAoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9OwogIH0pOwoKICAvLyBXYWl0IGZvciB0aGUgdXNlciB0byBwaWNrIHRoZSBmaWxlcy4KICBjb25zdCBmaWxlcyA9IHlpZWxkIHsKICAgIHByb21pc2U6IFByb21pc2UucmFjZShbcGlja2VkUHJvbWlzZSwgY2FuY2VsUHJvbWlzZV0pLAogICAgcmVzcG9uc2U6IHsKICAgICAgYWN0aW9uOiAnc3RhcnRpbmcnLAogICAgfQogIH07CgogIGNhbmNlbC5yZW1vdmUoKTsKCiAgLy8gRGlzYWJsZSB0aGUgaW5wdXQgZWxlbWVudCBzaW5jZSBmdXJ0aGVyIHBpY2tzIGFyZSBub3QgYWxsb3dlZC4KICBpbnB1dEVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlOwoKICBpZiAoIWZpbGVzKSB7CiAgICByZXR1cm4gewogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgICAgfQogICAgfTsKICB9CgogIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykgewogICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOwogICAgbGkuYXBwZW5kKHNwYW4oZmlsZS5uYW1lLCB7Zm9udFdlaWdodDogJ2JvbGQnfSkpOwogICAgbGkuYXBwZW5kKHNwYW4oCiAgICAgICAgYCgke2ZpbGUudHlwZSB8fCAnbi9hJ30pIC0gJHtmaWxlLnNpemV9IGJ5dGVzLCBgICsKICAgICAgICBgbGFzdCBtb2RpZmllZDogJHsKICAgICAgICAgICAgZmlsZS5sYXN0TW9kaWZpZWREYXRlID8gZmlsZS5sYXN0TW9kaWZpZWREYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpIDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ24vYSd9IC0gYCkpOwogICAgY29uc3QgcGVyY2VudCA9IHNwYW4oJzAlIGRvbmUnKTsKICAgIGxpLmFwcGVuZENoaWxkKHBlcmNlbnQpOwoKICAgIG91dHB1dEVsZW1lbnQuYXBwZW5kQ2hpbGQobGkpOwoKICAgIGNvbnN0IGZpbGVEYXRhUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gewogICAgICAgIHJlc29sdmUoZS50YXJnZXQucmVzdWx0KTsKICAgICAgfTsKICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUpOwogICAgfSk7CiAgICAvLyBXYWl0IGZvciB0aGUgZGF0YSB0byBiZSByZWFkeS4KICAgIGxldCBmaWxlRGF0YSA9IHlpZWxkIHsKICAgICAgcHJvbWlzZTogZmlsZURhdGFQcm9taXNlLAogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbnRpbnVlJywKICAgICAgfQogICAgfTsKCiAgICAvLyBVc2UgYSBjaHVua2VkIHNlbmRpbmcgdG8gYXZvaWQgbWVzc2FnZSBzaXplIGxpbWl0cy4gU2VlIGIvNjIxMTU2NjAuCiAgICBsZXQgcG9zaXRpb24gPSAwOwogICAgZG8gewogICAgICBjb25zdCBsZW5ndGggPSBNYXRoLm1pbihmaWxlRGF0YS5ieXRlTGVuZ3RoIC0gcG9zaXRpb24sIE1BWF9QQVlMT0FEX1NJWkUpOwogICAgICBjb25zdCBjaHVuayA9IG5ldyBVaW50OEFycmF5KGZpbGVEYXRhLCBwb3NpdGlvbiwgbGVuZ3RoKTsKICAgICAgcG9zaXRpb24gKz0gbGVuZ3RoOwoKICAgICAgY29uc3QgYmFzZTY0ID0gYnRvYShTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsIGNodW5rKSk7CiAgICAgIHlpZWxkIHsKICAgICAgICByZXNwb25zZTogewogICAgICAgICAgYWN0aW9uOiAnYXBwZW5kJywKICAgICAgICAgIGZpbGU6IGZpbGUubmFtZSwKICAgICAgICAgIGRhdGE6IGJhc2U2NCwKICAgICAgICB9LAogICAgICB9OwoKICAgICAgbGV0IHBlcmNlbnREb25lID0gZmlsZURhdGEuYnl0ZUxlbmd0aCA9PT0gMCA/CiAgICAgICAgICAxMDAgOgogICAgICAgICAgTWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCk7CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPSBgJHtwZXJjZW50RG9uZX0lIGRvbmVgOwoKICAgIH0gd2hpbGUgKHBvc2l0aW9uIDwgZmlsZURhdGEuYnl0ZUxlbmd0aCk7CiAgfQoKICAvLyBBbGwgZG9uZS4KICB5aWVsZCB7CiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICB9CiAgfTsKfQoKc2NvcGUuZ29vZ2xlID0gc2NvcGUuZ29vZ2xlIHx8IHt9OwpzY29wZS5nb29nbGUuY29sYWIgPSBzY29wZS5nb29nbGUuY29sYWIgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYi5fZmlsZXMgPSB7CiAgX3VwbG9hZEZpbGVzLAogIF91cGxvYWRGaWxlc0NvbnRpbnVlLAp9Owp9KShzZWxmKTsK","ok":true,"headers":[["content-type","application/javascript"]],"status":200,"status_text":""}},"base_uri":"https://localhost:8080/","height":263},"id":"CWHKDHzXQXXD","executionInfo":{"status":"ok","timestamp":1638357711630,"user_tz":-330,"elapsed":519778,"user":{"displayName":"SOUMADIP SAHA","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgBIhQzXFxUD67JZCokaCrA-s-f6-efd3fIlbej6A=s64","userId":"03639918028251710231"}},"outputId":"8493c8ef-519c-403d-d623-a78b141d0e9a"},"source":["from google.colab import files\n","uploaded = files.upload()\n","import io\n","df = pd.read_csv(io.BytesIO(uploaded['processed_ind_nifty50list.csv']))\n","df.head()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/html":["\n","     <input type=\"file\" id=\"files-dda7b9be-11a8-4419-99c6-72c81aa6a7ea\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-dda7b9be-11a8-4419-99c6-72c81aa6a7ea\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script src=\"/nbextensions/google.colab/files.js\"></script> "],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving processed_ind_nifty50list.csv to processed_ind_nifty50list.csv\n"]},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>date</th>\n","      <th>open</th>\n","      <th>high</th>\n","      <th>low</th>\n","      <th>close</th>\n","      <th>volume</th>\n","      <th>tic</th>\n","      <th>day</th>\n","      <th>macd</th>\n","      <th>rsi_30</th>\n","      <th>cci_30</th>\n","      <th>dx_30</th>\n","      <th>turbulence</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2009-01-02</td>\n","      <td>67.300003</td>\n","      <td>68.940002</td>\n","      <td>65.800003</td>\n","      <td>61.530338</td>\n","      <td>845745.0</td>\n","      <td>ADANIPORTS.NS</td>\n","      <td>4</td>\n","      <td>0.0</td>\n","      <td>100.0</td>\n","      <td>66.666667</td>\n","      <td>100.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2009-01-02</td>\n","      <td>89.910004</td>\n","      <td>90.500000</td>\n","      <td>88.510002</td>\n","      <td>80.486557</td>\n","      <td>45390.0</td>\n","      <td>ASIANPAINT.NS</td>\n","      <td>4</td>\n","      <td>0.0</td>\n","      <td>100.0</td>\n","      <td>66.666667</td>\n","      <td>100.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2009-01-02</td>\n","      <td>104.400002</td>\n","      <td>109.500000</td>\n","      <td>103.459999</td>\n","      <td>97.598686</td>\n","      <td>14261265.0</td>\n","      <td>AXISBANK.NS</td>\n","      <td>4</td>\n","      <td>0.0</td>\n","      <td>100.0</td>\n","      <td>66.666667</td>\n","      <td>100.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2009-01-02</td>\n","      <td>204.699997</td>\n","      <td>210.000000</td>\n","      <td>199.000000</td>\n","      <td>150.069901</td>\n","      <td>228864.0</td>\n","      <td>BAJAJ-AUTO.NS</td>\n","      <td>4</td>\n","      <td>0.0</td>\n","      <td>100.0</td>\n","      <td>66.666667</td>\n","      <td>100.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2009-01-02</td>\n","      <td>148.843155</td>\n","      <td>155.229156</td>\n","      <td>143.439606</td>\n","      <td>152.513428</td>\n","      <td>25548.0</td>\n","      <td>BAJAJFINSV.NS</td>\n","      <td>4</td>\n","      <td>0.0</td>\n","      <td>100.0</td>\n","      <td>66.666667</td>\n","      <td>100.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         date        open        high  ...     cci_30  dx_30  turbulence\n","0  2009-01-02   67.300003   68.940002  ...  66.666667  100.0         0.0\n","1  2009-01-02   89.910004   90.500000  ...  66.666667  100.0         0.0\n","2  2009-01-02  104.400002  109.500000  ...  66.666667  100.0         0.0\n","3  2009-01-02  204.699997  210.000000  ...  66.666667  100.0         0.0\n","4  2009-01-02  148.843155  155.229156  ...  66.666667  100.0         0.0\n","\n","[5 rows x 13 columns]"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","metadata":{"id":"FsjYYCpdyLxP"},"source":["TRAIN_START_DATE = '2009-01-01'\n","TRAIN_END_DATE = '2019-07-30'\n","\n","VAL_START_DATE = '2019-08-01'\n","VAL_END_DATE = '2020-07-30'\n","\n","TEST_START_DATE = '2020-08-01'\n","TEST_END_DATE = '2021-10-01'\n","\n","# ticker_list = config.DOW_30_TICKER\n","ticker_list = list(df.tic.unique())\n","#data_source = 'yahoofinance'\n","#time_interval = '1D'\n","technical_indicator_list = [\"macd\",\"rsi_30\", \"cci_30\", \"dx_30\"]\n","env = StockTradingEnv_numpy\n","model_name = \"a2c\"\n","\n","# PPO_PARAMS = {\n","#     \"n_steps\": 2048,\n","#     \"ent_coef\": 0.01,\n","#     \"learning_rate\": 0.00025,\n","#     \"batch_size\": 128,\n","# }\n","\n","\n","run_ids = {}\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000,"referenced_widgets":["09af8af4e6904e3abf7dfc593269f23c","41b5cda01bd444b884a33f38292a656a","3bf727116ba94a159af5bd870a854f8b","520445fe85ae4e1f87f4bc98d9a83236","805c6569231e4db6bc9a0fa6f93af223","67ad63a0501c41abaf4219767ee0ff62","4ca7d4548f3b40f792713a80db7087fe","899f2aa4f0bb4e7db870dffba54ce54f","48983c2fdf744a3d985875a552063a9b","b7c6ddebbe8d41f5859d784ec6c808de","c533d4dcd7bd47729709565bb588096a","cd6f01a75e6c4283acbe22bee5e92a66","57c609b60c9f4248bc4eaa48c10cebf2","603f625f11944d68b3b1cfdaf3345119","f08e34ca0f1f4a30b10a6606344ddc59","9b218b9768e34a5ab47a9768c2e2cf0b","90446ece41c6489fb84f380eb4cce806","d4ea47342cbc4beda1a0e8aaeb1acfaa","7b19ee3cd93247cfbf599807ba564ce6","1e3a40ee32b447d7aff390c137da1309","1cdb668c63a542fb8fdccf0e5e1cb365","eb4cd6e4e1aa4ac58542940f0ed7c083","9bfc6cf06e194997a5a9e8df234f153d","46516d3d2a264cbfa6b3452109ed5a3e"]},"id":"E4XBN4a6nSlV","executionInfo":{"status":"ok","timestamp":1638357758127,"user_tz":-330,"elapsed":46503,"user":{"displayName":"SOUMADIP SAHA","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgBIhQzXFxUD67JZCokaCrA-s-f6-efd3fIlbej6A=s64","userId":"03639918028251710231"}},"outputId":"a450290a-389c-4f5f-d6f2-15fded053bbf"},"source":["count = 30\n","os.environ['WANDB_AGENT_MAX_INITIAL_FAILURES']= str(count-5)\n","project_name = 'Trial(A2C)-NIFTY50-sweeps-sb3'\n","sweep_config = model_params(model_name)\n","\n","sweep_id = wandb.sweep(sweep_config,project=project_name)\n","wandb.agent(sweep_id, train, count=count)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Create sweep with ID: z2m3ulsl\n","Sweep URL: https://wandb.ai/soumadip-saha/Trial%28DDPG%29-NIFTY50-sweeps-sb3/sweeps/z2m3ulsl\n"]},{"output_type":"stream","name":"stderr","text":["\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: vxv2hrn7 with config:\n","\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 512\n","\u001b[34m\u001b[1mwandb\u001b[0m: \tbuffer_size: 1000000\n","\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.7777768166544532\n","\u001b[34m\u001b[1mwandb\u001b[0m: \ttotal_timesteps: 50000\n","\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33msoumadip-saha\u001b[0m (use `wandb login --relogin` to force relogin)\n"]},{"output_type":"display_data","data":{"text/html":["\n","                    Syncing run <strong><a href=\"https://wandb.ai/soumadip-saha/Trial%28DDPG%29-NIFTY50-sweeps-sb3/runs/vxv2hrn7\" target=\"_blank\">helpful-sweep-1</a></strong> to <a href=\"https://wandb.ai/soumadip-saha/Trial%28DDPG%29-NIFTY50-sweeps-sb3\" target=\"_blank\">Weights & Biases</a> (<a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">docs</a>).<br/>\n","Sweep page: <a href=\"https://wandb.ai/soumadip-saha/Trial%28DDPG%29-NIFTY50-sweeps-sb3/sweeps/z2m3ulsl\" target=\"_blank\">https://wandb.ai/soumadip-saha/Trial%28DDPG%29-NIFTY50-sweeps-sb3/sweeps/z2m3ulsl</a><br/>\n","\n","                "],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["['ADANIPORTS.NS' 'ASIANPAINT.NS' 'AXISBANK.NS' 'BAJAJ-AUTO.NS'\n"," 'BAJAJFINSV.NS' 'BAJFINANCE.NS' 'BHARTIARTL.NS' 'BPCL.NS' 'BRITANNIA.NS'\n"," 'CIPLA.NS' 'DIVISLAB.NS' 'DRREDDY.NS' 'EICHERMOT.NS' 'GRASIM.NS'\n"," 'HCLTECH.NS' 'HDFCBANK.NS' 'HEROMOTOCO.NS' 'HINDALCO.NS' 'HINDUNILVR.NS'\n"," 'ICICIBANK.NS' 'INDUSINDBK.NS' 'INFY.NS' 'IOC.NS' 'ITC.NS' 'JSWSTEEL.NS'\n"," 'KOTAKBANK.NS' 'LT.NS' 'M&M.NS' 'MARUTI.NS' 'NESTLEIND.NS' 'NTPC.NS'\n"," 'ONGC.NS' 'POWERGRID.NS' 'RELIANCE.NS' 'SBIN.NS' 'SHREECEM.NS'\n"," 'SUNPHARMA.NS' 'TATACONSUM.NS' 'TATAMOTORS.NS' 'TATASTEEL.NS' 'TCS.NS'\n"," 'TECHM.NS' 'TITAN.NS' 'ULTRACEMCO.NS' 'UPL.NS' 'WIPRO.NS']\n","Successfully transformed into array\n","{'batch_size': 512, 'buffer_size': 1000000, 'learning_rate': 0.7777768166544532, 'total_timesteps': 50000}\n"]},{"output_type":"display_data","data":{"text/html":["<br/>Waiting for W&B process to finish, PID 452... <strong style=\"color:red\">(failed 1).</strong> Press ctrl-c to abort syncing."],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{}},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"09af8af4e6904e3abf7dfc593269f23c","version_minor":0,"version_major":2},"text/plain":["VBox(children=(Label(value=' 0.07MB of 0.07MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"]},"metadata":{}},{"output_type":"display_data","data":{"text/html":["<style>\n","    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n","    .wandb-row { display: flex; flex-direction: row; flex-wrap: wrap; width: 100% }\n","    .wandb-col { display: flex; flex-direction: column; flex-basis: 100%; flex: 1; padding: 10px; }\n","    </style>\n","<div class=\"wandb-row\"><div class=\"wandb-col\">\n","</div><div class=\"wandb-col\">\n","</div></div>\n","Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)\n","<br/>Synced <strong style=\"color:#cdcd00\">helpful-sweep-1</strong>: <a href=\"https://wandb.ai/soumadip-saha/Trial%28DDPG%29-NIFTY50-sweeps-sb3/runs/vxv2hrn7\" target=\"_blank\">https://wandb.ai/soumadip-saha/Trial%28DDPG%29-NIFTY50-sweeps-sb3/runs/vxv2hrn7</a><br/>\n","Find logs at: <code>./wandb/run-20211201_112153-vxv2hrn7/logs</code><br/>\n"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{}},{"output_type":"stream","name":"stderr","text":["Run vxv2hrn7 errored: TypeError(\"__init__() got an unexpected keyword argument 'total_timesteps'\")\n","\u001b[34m\u001b[1mwandb\u001b[0m: \u001b[32m\u001b[41mERROR\u001b[0m Run vxv2hrn7 errored: TypeError(\"__init__() got an unexpected keyword argument 'total_timesteps'\")\n","\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: n2tbbued with config:\n","\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n","\u001b[34m\u001b[1mwandb\u001b[0m: \tbuffer_size: 1000000\n","\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.08245532174927021\n","\u001b[34m\u001b[1mwandb\u001b[0m: \ttotal_timesteps: 15000\n"]},{"output_type":"display_data","data":{"text/html":["\n","                    Syncing run <strong><a href=\"https://wandb.ai/soumadip-saha/Trial%28DDPG%29-NIFTY50-sweeps-sb3/runs/n2tbbued\" target=\"_blank\">radiant-sweep-2</a></strong> to <a href=\"https://wandb.ai/soumadip-saha/Trial%28DDPG%29-NIFTY50-sweeps-sb3\" target=\"_blank\">Weights & Biases</a> (<a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">docs</a>).<br/>\n","Sweep page: <a href=\"https://wandb.ai/soumadip-saha/Trial%28DDPG%29-NIFTY50-sweeps-sb3/sweeps/z2m3ulsl\" target=\"_blank\">https://wandb.ai/soumadip-saha/Trial%28DDPG%29-NIFTY50-sweeps-sb3/sweeps/z2m3ulsl</a><br/>\n","\n","                "],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["['ADANIPORTS.NS' 'ASIANPAINT.NS' 'AXISBANK.NS' 'BAJAJ-AUTO.NS'\n"," 'BAJAJFINSV.NS' 'BAJFINANCE.NS' 'BHARTIARTL.NS' 'BPCL.NS' 'BRITANNIA.NS'\n"," 'CIPLA.NS' 'DIVISLAB.NS' 'DRREDDY.NS' 'EICHERMOT.NS' 'GRASIM.NS'\n"," 'HCLTECH.NS' 'HDFCBANK.NS' 'HEROMOTOCO.NS' 'HINDALCO.NS' 'HINDUNILVR.NS'\n"," 'ICICIBANK.NS' 'INDUSINDBK.NS' 'INFY.NS' 'IOC.NS' 'ITC.NS' 'JSWSTEEL.NS'\n"," 'KOTAKBANK.NS' 'LT.NS' 'M&M.NS' 'MARUTI.NS' 'NESTLEIND.NS' 'NTPC.NS'\n"," 'ONGC.NS' 'POWERGRID.NS' 'RELIANCE.NS' 'SBIN.NS' 'SHREECEM.NS'\n"," 'SUNPHARMA.NS' 'TATACONSUM.NS' 'TATAMOTORS.NS' 'TATASTEEL.NS' 'TCS.NS'\n"," 'TECHM.NS' 'TITAN.NS' 'ULTRACEMCO.NS' 'UPL.NS' 'WIPRO.NS']\n","Successfully transformed into array\n","{'batch_size': 128, 'buffer_size': 1000000, 'learning_rate': 0.08245532174927021, 'total_timesteps': 15000}\n"]},{"output_type":"display_data","data":{"text/html":["<br/>Waiting for W&B process to finish, PID 489... <strong style=\"color:red\">(failed 1).</strong> Press ctrl-c to abort syncing."],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{}},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"48983c2fdf744a3d985875a552063a9b","version_minor":0,"version_major":2},"text/plain":["VBox(children=(Label(value=' 0.08MB of 0.08MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"]},"metadata":{}},{"output_type":"display_data","data":{"text/html":["<style>\n","    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n","    .wandb-row { display: flex; flex-direction: row; flex-wrap: wrap; width: 100% }\n","    .wandb-col { display: flex; flex-direction: column; flex-basis: 100%; flex: 1; padding: 10px; }\n","    </style>\n","<div class=\"wandb-row\"><div class=\"wandb-col\">\n","</div><div class=\"wandb-col\">\n","</div></div>\n","Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)\n","<br/>Synced <strong style=\"color:#cdcd00\">radiant-sweep-2</strong>: <a href=\"https://wandb.ai/soumadip-saha/Trial%28DDPG%29-NIFTY50-sweeps-sb3/runs/n2tbbued\" target=\"_blank\">https://wandb.ai/soumadip-saha/Trial%28DDPG%29-NIFTY50-sweeps-sb3/runs/n2tbbued</a><br/>\n","Find logs at: <code>./wandb/run-20211201_112208-n2tbbued/logs</code><br/>\n"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{}},{"output_type":"stream","name":"stderr","text":["Run n2tbbued errored: TypeError(\"__init__() got an unexpected keyword argument 'total_timesteps'\")\n","\u001b[34m\u001b[1mwandb\u001b[0m: \u001b[32m\u001b[41mERROR\u001b[0m Run n2tbbued errored: TypeError(\"__init__() got an unexpected keyword argument 'total_timesteps'\")\n","\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: aedvxnhz with config:\n","\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n","\u001b[34m\u001b[1mwandb\u001b[0m: \tbuffer_size: 100000\n","\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.645478679727099\n","\u001b[34m\u001b[1mwandb\u001b[0m: \ttotal_timesteps: 10000\n"]},{"output_type":"display_data","data":{"text/html":["\n","                    Syncing run <strong><a href=\"https://wandb.ai/soumadip-saha/Trial%28DDPG%29-NIFTY50-sweeps-sb3/runs/aedvxnhz\" target=\"_blank\">drawn-sweep-3</a></strong> to <a href=\"https://wandb.ai/soumadip-saha/Trial%28DDPG%29-NIFTY50-sweeps-sb3\" target=\"_blank\">Weights & Biases</a> (<a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">docs</a>).<br/>\n","Sweep page: <a href=\"https://wandb.ai/soumadip-saha/Trial%28DDPG%29-NIFTY50-sweeps-sb3/sweeps/z2m3ulsl\" target=\"_blank\">https://wandb.ai/soumadip-saha/Trial%28DDPG%29-NIFTY50-sweeps-sb3/sweeps/z2m3ulsl</a><br/>\n","\n","                "],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["['ADANIPORTS.NS' 'ASIANPAINT.NS' 'AXISBANK.NS' 'BAJAJ-AUTO.NS'\n"," 'BAJAJFINSV.NS' 'BAJFINANCE.NS' 'BHARTIARTL.NS' 'BPCL.NS' 'BRITANNIA.NS'\n"," 'CIPLA.NS' 'DIVISLAB.NS' 'DRREDDY.NS' 'EICHERMOT.NS' 'GRASIM.NS'\n"," 'HCLTECH.NS' 'HDFCBANK.NS' 'HEROMOTOCO.NS' 'HINDALCO.NS' 'HINDUNILVR.NS'\n"," 'ICICIBANK.NS' 'INDUSINDBK.NS' 'INFY.NS' 'IOC.NS' 'ITC.NS' 'JSWSTEEL.NS'\n"," 'KOTAKBANK.NS' 'LT.NS' 'M&M.NS' 'MARUTI.NS' 'NESTLEIND.NS' 'NTPC.NS'\n"," 'ONGC.NS' 'POWERGRID.NS' 'RELIANCE.NS' 'SBIN.NS' 'SHREECEM.NS'\n"," 'SUNPHARMA.NS' 'TATACONSUM.NS' 'TATAMOTORS.NS' 'TATASTEEL.NS' 'TCS.NS'\n"," 'TECHM.NS' 'TITAN.NS' 'ULTRACEMCO.NS' 'UPL.NS' 'WIPRO.NS']\n","Successfully transformed into array\n","{'batch_size': 32, 'buffer_size': 100000, 'learning_rate': 0.645478679727099, 'total_timesteps': 10000}\n"]},{"output_type":"display_data","data":{"text/html":["<br/>Waiting for W&B process to finish, PID 526... <strong style=\"color:red\">(failed 1).</strong> Press ctrl-c to abort syncing."],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{}},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"90446ece41c6489fb84f380eb4cce806","version_minor":0,"version_major":2},"text/plain":["VBox(children=(Label(value=' 0.09MB of 0.09MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"]},"metadata":{}},{"output_type":"display_data","data":{"text/html":["<style>\n","    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n","    .wandb-row { display: flex; flex-direction: row; flex-wrap: wrap; width: 100% }\n","    .wandb-col { display: flex; flex-direction: column; flex-basis: 100%; flex: 1; padding: 10px; }\n","    </style>\n","<div class=\"wandb-row\"><div class=\"wandb-col\">\n","</div><div class=\"wandb-col\">\n","</div></div>\n","Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)\n","<br/>Synced <strong style=\"color:#cdcd00\">drawn-sweep-3</strong>: <a href=\"https://wandb.ai/soumadip-saha/Trial%28DDPG%29-NIFTY50-sweeps-sb3/runs/aedvxnhz\" target=\"_blank\">https://wandb.ai/soumadip-saha/Trial%28DDPG%29-NIFTY50-sweeps-sb3/runs/aedvxnhz</a><br/>\n","Find logs at: <code>./wandb/run-20211201_112224-aedvxnhz/logs</code><br/>\n"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{}},{"output_type":"stream","name":"stderr","text":["Run aedvxnhz errored: TypeError(\"__init__() got an unexpected keyword argument 'total_timesteps'\")\n","\u001b[34m\u001b[1mwandb\u001b[0m: \u001b[32m\u001b[41mERROR\u001b[0m Run aedvxnhz errored: TypeError(\"__init__() got an unexpected keyword argument 'total_timesteps'\")\n","Detected 3 failed runs in the first 60 seconds, killing sweep.\n","\u001b[34m\u001b[1mwandb\u001b[0m: \u001b[32m\u001b[41mERROR\u001b[0m Detected 3 failed runs in the first 60 seconds, killing sweep.\n","\u001b[34m\u001b[1mwandb\u001b[0m: To disable this check set WANDB_AGENT_DISABLE_FLAPPING=true\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xL2-eqxJ4hYb","executionInfo":{"status":"ok","timestamp":1638357758128,"user_tz":-330,"elapsed":15,"user":{"displayName":"SOUMADIP SAHA","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgBIhQzXFxUD67JZCokaCrA-s-f6-efd3fIlbej6A=s64","userId":"03639918028251710231"}},"outputId":"8eee97e2-d30a-428b-d17a-2abd228369ef"},"source":["run_ids"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{}"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","metadata":{"id":"n6E8iv5JmAE7"},"source":[""],"execution_count":null,"outputs":[]}]}